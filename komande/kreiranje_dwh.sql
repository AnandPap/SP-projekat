ATTACH DATABASE 'production.db' AS prod;

-- Uspostavlja obavezu poštovanja ograničenja stranih ključeva
PRAGMA foreign_keys = ON;

DROP TABLE IF EXISTS ORDER_FACT;
DROP TABLE IF EXISTS INVENTORY_FACT;
DROP TABLE IF EXISTS DIM_TIME;
DROP TABLE IF EXISTS DIM_WAREHOUSE;
DROP TABLE IF EXISTS DIM_PRODUCT;
DROP TABLE IF EXISTS DIM_CUSTOMER;
DROP TABLE IF EXISTS DIM_EMPLOYEE;

CREATE TABLE DIM_EMPLOYEE (
    DIM_EMPLOYEE_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    FULL_NAME TEXT,
    JOB_TITLE TEXT,
    MANAGER_ID INTEGER
);

CREATE TABLE DIM_CUSTOMER (
    DIM_CUSTOMER_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    COMPANY_NAME TEXT,
    CREDIT_LIMIT INTEGER,
    REPRESENTATIVE_NAME TEXT,
    REPRESENTATIVE_PHONE TEXT,
    REPRESENTATIVE_EMAIL TEXT
);

CREATE TABLE DIM_PRODUCT (
    DIM_PRODUCT_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    PRODUCT_NAME TEXT,
    CATEGORY_NAME TEXT,
    DESCRIPTION TEXT,
    STANDARD_COST REAL,
    LIST_PRICE REAL,
    PROFIT_MARGIN REAL GENERATED ALWAYS AS (ROUND(LIST_PRICE - STANDARD_COST, 2)) STORED
);

CREATE TABLE DIM_WAREHOUSE (
    DIM_WAREHOUSE_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    REGION_NAME TEXT,
    COUNTRY_NAME TEXT,
    CITY_NAME TEXT,
    ADDRESS TEXT,
    POSTAL_CODE TEXT
);

CREATE TABLE DIM_TIME (
    ORDER_DATE_ID INTEGER PRIMARY KEY,
    FULL_DATE TEXT,
    YEAR INTEGER,
    QUARTER INTEGER,
    MONTH INTEGER,
    WEEKDAY TEXT
);

INSERT INTO DIM_EMPLOYEE (FULL_NAME, JOB_TITLE, MANAGER_ID)
SELECT FIRST_NAME || ' ' || LAST_NAME, JOB_TITLE, MANAGER_ID FROM prod.EMPLOYEES;

INSERT INTO DIM_CUSTOMER (COMPANY_NAME, CREDIT_LIMIT, REPRESENTATIVE_NAME, REPRESENTATIVE_PHONE, REPRESENTATIVE_EMAIL)
SELECT c.NAME, c.CREDIT_LIMIT, con.FIRST_NAME || ' ' || con.LAST_NAME, con.PHONE, con.EMAIL
FROM prod.CUSTOMERS c
JOIN prod.CONTACTS con ON c.CUSTOMER_ID = con.CUSTOMER_ID;

INSERT INTO DIM_PRODUCT (PRODUCT_NAME, CATEGORY_NAME, DESCRIPTION, STANDARD_COST, LIST_PRICE)
SELECT p.PRODUCT_NAME, pc.CATEGORY_NAME, p.DESCRIPTION, p.STANDARD_COST, p.LIST_PRICE
FROM prod.PRODUCTS p
JOIN prod.PRODUCT_CATEGORIES pc ON p.CATEGORY_ID = pc.CATEGORY_ID;

INSERT INTO DIM_WAREHOUSE (REGION_NAME, COUNTRY_NAME, CITY_NAME, ADDRESS, POSTAL_CODE)
SELECT DISTINCT
    r.REGION_NAME,
    c.COUNTRY_NAME,
    w.WAREHOUSE_NAME,
    l.ADDRESS,
    l.POSTAL_CODE
FROM prod.WAREHOUSES w
JOIN prod.LOCATIONS l ON w.LOCATION_ID = l.LOCATION_ID
JOIN prod.COUNTRIES c ON l.COUNTRY_ID = c.COUNTRY_ID
JOIN prod.REGIONS r ON c.REGION_ID = r.REGION_ID;

INSERT INTO DIM_TIME (ORDER_DATE_ID, FULL_DATE, YEAR, QUARTER, MONTH, WEEKDAY)
SELECT DISTINCT CAST(strftime('%Y%m%d', ORDER_DATE) AS INTEGER) AS ORDER_DATE_ID, ORDER_DATE, strftime('%Y', ORDER_DATE),
       (strftime('%m', ORDER_DATE) - 1) / 3 + 1, strftime('%m', ORDER_DATE),
       (CASE 
            WHEN strftime('%w', ORDER_DATE) = '0' THEN 7
            ELSE strftime('%w', ORDER_DATE)
        END) AS WEEKDAY
FROM prod.ORDERS;

CREATE TABLE ORDER_FACT (
    ORDER_ID INTEGER, -- ORDER_NUMBER zamjensko ime?
    ITEM_ID INTEGER,
    DIM_EMPLOYEE_FK INTEGER,
    DIM_CUSTOMER_FK INTEGER,
    DIM_PRODUCT_FK INTEGER,
    -- DIM_WAREHOUSE_FK INTEGER,
    ORDER_DATE_FK INTEGER,
    STATUS TEXT,
    QUANTITY INTEGER,
    PRIMARY KEY (ORDER_ID, ITEM_ID), -- Kompozitni primarni kljuc
    FOREIGN KEY (DIM_EMPLOYEE_FK) REFERENCES DIM_EMPLOYEE(DIM_EMPLOYEE_ID),
    FOREIGN KEY (DIM_CUSTOMER_FK) REFERENCES DIM_CUSTOMER(DIM_CUSTOMER_ID),
    FOREIGN KEY (DIM_PRODUCT_FK) REFERENCES DIM_PRODUCT(DIM_PRODUCT_ID),
    FOREIGN KEY (ORDER_DATE_FK) REFERENCES DIM_TIME(ORDER_DATE_ID)
    -- FOREIGN KEY (DIM_WAREHOUSE_FK) REFERENCES DIM_WAREHOUSE(DIM_WAREHOUSE_ID)
);

-- Nije raden join sa DIM_EMPLOYEE jer bi redovi koji imaju DIM_EMPLOYEE_FK NULL bili izbaceni iz fact tabele
INSERT INTO ORDER_FACT (ORDER_ID, ITEM_ID, DIM_EMPLOYEE_FK, DIM_CUSTOMER_FK, DIM_PRODUCT_FK, 
-- DIM_WAREHOUSE_FK, 
ORDER_DATE_FK, STATUS, QUANTITY)
SELECT o.ORDER_ID, oi.ITEM_ID, o.SALESMAN_ID, dc.DIM_CUSTOMER_ID, dp.DIM_PRODUCT_ID, 
-- dw.DIM_WAREHOUSE_ID, 
dt.ORDER_DATE_ID, o.STATUS, oi.QUANTITY
FROM prod.ORDERS o
JOIN prod.ORDER_ITEMS oi ON o.ORDER_ID = oi.ORDER_ID
JOIN DIM_CUSTOMER dc ON o.CUSTOMER_ID = dc.DIM_CUSTOMER_ID
JOIN DIM_PRODUCT dp ON oi.PRODUCT_ID = dp.DIM_PRODUCT_ID
-- JOIN prod.INVENTORIES i ON dp.DIM_PRODUCT_ID = i.PRODUCT_ID
-- JOIN DIM_WAREHOUSE dw ON i.WAREHOUSE_ID = dw.DIM_WAREHOUSE_ID
JOIN DIM_TIME dt ON o.ORDER_DATE = dt.FULL_DATE;

CREATE TABLE INVENTORY_FACT (
    ITEM_NUMBER INTEGER PRIMARY KEY AUTOINCREMENT,
    DIM_PRODUCT_FK INTEGER,
    DIM_WAREHOUSE_FK INTEGER,
    QUANTITY INTEGER,
    FOREIGN KEY (DIM_PRODUCT_FK) REFERENCES DIM_PRODUCT (DIM_PRODUCT_ID),
    FOREIGN KEY (DIM_WAREHOUSE_FK) REFERENCES DIM_WAREHOUSE (DIM_WAREHOUSE_ID)
);

INSERT INTO INVENTORY_FACT (DIM_PRODUCT_FK, DIM_WAREHOUSE_FK, QUANTITY)
SELECT dp.DIM_PRODUCT_ID, dw.DIM_WAREHOUSE_ID, i.QUANTITY
FROM prod.INVENTORIES i
JOIN DIM_PRODUCT dp ON i.PRODUCT_ID = dp.DIM_PRODUCT_ID
JOIN DIM_WAREHOUSE dw ON i.WAREHOUSE_ID = dw.DIM_WAREHOUSE_ID;
